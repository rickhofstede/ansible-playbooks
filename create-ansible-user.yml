# create-ansible-user.yml
#
# Author:   Rick Hofstede
#
# This playbook is kind of a bootstrapping playbook; it creates an `ansible`
# user that features all the necessary properties and  configurations. It should
# be executed as a user with `sudo` permissions.
#
# Example execution command:
#
# ansible-playbook -u <user> --ask-pass --ask-sudo-pass create-ansible-user.yml
#

---
- hosts: all
  sudo: true
  vars:
    username: ansible
    usergroups: adm

  tasks:
    # http://docs.ansible.com/ansible/user_module.html
    - name: Create `ansible` user
      user:
        name: "{{ username }}"
        groups: "{{ usergroups }}"
        createhome: true

    # http://docs.ansible.com/ansible/lineinfile_module.html
    - name: Allow user `ansible` to use `sudo` with no password
      lineinfile:
        destfile: /etc/sudoers
        insertafter: "# User privilege specification"
        line: "{{ username }}\tALL=(ALL:ALL) NOPASSWD:ALL"
        validate: "visudo -cf %s"

    # http://docs.ansible.com/ansible/shell_module.html
    - name: Retrieve sshd(8) `AllowUsers` configuration
      shell: grep AllowUsers /etc/ssh/sshd_config
      register: allowusers
      ignore_errors: true  # Avoid failure if grep returns `1` (String not found)

    # http://docs.ansible.com/ansible/lineinfile_module.html
    # http://stackoverflow.com/questions/31432367/ansible-insert-a-single-word-on-an-existing-line-in-a-file
    - name: Add user `ansible` to sshd(8) `AllowUsers`
      lineinfile:
        destfile: /etc/ssh/sshd_config
        regexp: '^AllowUsers'
        line: "{{ allowusers.stdout }} {{ username }}"
      when: not "{{ allowusers.stdout }}" == "" and "{{ username }}" not in "{{ allowusers.stdout }}"
      register: sshd_config

    # http://docs.ansible.com/ansible/service_module.html
    - name: Restart `sshd` service
      service:
        name: ssh
        state: reloaded
      when: sshd_config.changed

    # http://docs.ansible.com/ansible/file_module.html
    - name: Create `.ssh` directory
      file:
        path: "/home/{{ username }}/.ssh/"
        state: directory

    # http://docs.ansible.com/ansible/authorized_key_module.html
    - name: Add SSH key as authorized key
      authorized_key:
        user: "{{ username }}"
        key: "{{ lookup('file', lookup('env', 'HOME') + '/.ssh/id_rsa.pub') }}"
